topic: random-messages

connectConnector:
  name: postgres-connector
  connectionUrl: jdbc:postgresql://postgresql-cluster.postgres.svc:5432/logs
  connectionUser: loguser
  connectionPassword: postgrespw
  tasksMax: 1

connectCluster:
  name: "kafka-connect-cluster"
  version: "3.5.1"
  replicas: 1
  build:
    registrySecret: registry-credentials
    output:
      type: docker
      image: ghcr.io/sheveg/connect-cluster-jdbc:latest
    plugins:
      - name: jdbc-sink-connector
        artifacts:
          - type: zip
            url: https://d1i4a15mxbxib1.cloudfront.net/api/plugins/confluentinc/kafka-connect-jdbc/versions/10.7.4/confluentinc-kafka-connect-jdbc-10.7.4.zip

cluster:
  name: "kafka-cluster"
  version: "3.5.1"
  replicas: 3
  config:
    # For upgrading details see
    # https://strimzi.io/docs/operators/latest/deploying.html#proc-upgrading-brokers-newer-kafka-str
    logMessageFormatVersion: "3.2.1"
    interBrokerProtocolVersion: "3.2.1"
    offsetsTopicReplicationFactor: 3
    transactionStateLogReplicationFactor: 3
    transactionStateLogMinInSyncReplicas: 1
    autoCreateTopicsEnable: true
    defaultReplicationFactor: 3
    minInsyncReplicas: 1
  resources:
    limits:
      cpu: 2000m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 768Mi
  listener:
    name: tls
    port: 9093
    type: internal
    tls: true
    authentication:
      type: scram-sha-512

nodeAffinityLabel: kubernetes.io/hostname

zookeeper:
  replicas: 3
  resources:
    limits:
      cpu: 800m
      memory: 512Mi
    requests:
      cpu: 20m
      memory: 256Mi

entityOperator:
  topicOperator:
    resources:
      limits:
        cpu: 400m
        memory: 256Mi
      requests:
        cpu: 20m
        memory: 224Mi
  userOperator:
    resources:
      limits:
        cpu: 400m
        memory: 256Mi
      requests:
        cpu: 10m
        memory: 192Mi
  tlsSidecar:
    resources:
      limits:
        cpu: 600m
        memory: 16Mi
      requests:
        cpu: 10m
        memory: 8Mi

consumer:
  name: "kafka-consumer"
  image:
    repository: ghcr.io/sheveg/kafkaconsumer
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main"
  user: "consumer-user"
  password: "consumer-password"
  env:
    - name: Kafka__BootstrapUrl
      value: "{{ .Values.cluster.name }}-kafka-bootstrap:{{ .Values.cluster.listener.port }}"
    - name: Kafka__Topic
      value: "{{ .Values.topic }}"
    - name: Kafka__User
      value: "{{ .Values.consumer.user }}"
    - name: Kafka__Password
      value: "{{ .Values.consumer.password }}"
    - name: Kafka__SaslMechanism
      value: "{{ .Values.cluster.listener.authentication.type }}"
    - name: Kafka__SecurityProtocol
      value: "SASL_SSL"
  
  replicaCount: 1

producer:
  name: "kafka-producer"
  image:
    repository: ghcr.io/sheveg/kafkaproducer
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main"
  user: "producer-user"
  password: "producer-password"
  env:
    - name: Kafka__BootstrapUrl
      value: "{{ .Values.cluster.name }}-kafka-bootstrap:{{ .Values.cluster.listener.port }}"
    - name: Kafka__Topic
      value: "{{ .Values.topic }}"
    - name: Kafka__User
      value: "{{ .Values.producer.user }}"
    - name: Kafka__Password
      value: "{{ .Values.producer.password }}"
    - name: Kafka__SaslMechanism
      value: "{{ .Values.cluster.listener.authentication.type }}"
    - name: Kafka__SecurityProtocol
      value: "SASL_SSL"
  replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
   fsGroup: 15555

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 15555
  runAsGroup: 15555
  privileged: false
  allowPrivilegeEscalation: false